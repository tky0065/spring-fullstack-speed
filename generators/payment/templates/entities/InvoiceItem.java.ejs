package <%= packageName %>.domain;

import java.math.BigDecimal;
import java.time.Instant;
import java.util.UUID;

import javax.persistence.*;

import lombok.Getter;
import lombok.Setter;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import lombok.Builder;

/**
 * Entité représentant un élément de ligne d'une facture.
 * Détaille chaque article facturé dans une facture.
 */
@Entity
@Table(name = "payment_invoice_item")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class InvoiceItem {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(nullable = false, unique = true)
    private String invoiceItemId;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "invoice_id", nullable = false)
    private Invoice invoice;

    @Column(nullable = false)
    private String description;

    @Column(nullable = false)
    private BigDecimal amount;

    @Column(nullable = false)
    private Integer quantity;

    @Column(name = "unit_price")
    private BigDecimal unitPrice;

    @Column(nullable = false)
    private String currency;

    @Column(name = "tax_percent")
    private BigDecimal taxPercent;

    @Column(name = "tax_amount")
    private BigDecimal taxAmount;

    @Column(name = "provider_reference")
    private String providerReference;

    @Column(name = "product_id")
    private String productId;

    @Column(name = "plan_id")
    private String planId;

    @Column(name = "subscription_id")
    private String subscriptionId;

    @Column(name = "created_date", nullable = false)
    private Instant createdDate;

    @Column(name = "updated_date")
    private Instant updatedDate;

    @PrePersist
    protected void onCreate() {
        this.invoiceItemId = UUID.randomUUID().toString();
        this.createdDate = Instant.now();
        if (this.quantity == null) {
            this.quantity = 1;
        }
    }

    @PreUpdate
    protected void onUpdate() {
        this.updatedDate = Instant.now();
    }
}
