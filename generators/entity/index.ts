import { BaseGenerator } from "../base-generator.js";
import chalk from "chalk";

/**
 * G√©n√©rateur d'entit√©s
 * Permet de cr√©er de nouvelles entit√©s avec leurs repository, service et controller
 */
export default class EntityGenerator extends BaseGenerator {
  declare answers: any;

  constructor(args: string | string[], options: any) {
    super(args, options);

    // Options pour le g√©n√©rateur d'entit√©s
    this.option("entity-name", {
      description: "Nom de l'entit√© √† g√©n√©rer",
      type: String,
    });

    this.option("package-name", {
      description: "Nom du package pour l'entit√©",
      type: String,
    });
  }

  initializing() {
    this.log("Initialisation du g√©n√©rateur d'entit√©s...");
  }

  async prompting() {
    const prompts: any = [
      {
        type: "input",
        name: "entityName",
        message: "Quel est le nom de l'entit√©?",
        default: this.options["entity-name"],
        validate: (input: string) => {
          if (!input || input.trim() === "") {
            return "Le nom de l'entit√© est obligatoire.";
          }
          if (!/^[A-Z][a-zA-Z0-9]*$/.test(input)) {
            return "Le nom de l'entit√© doit commencer par une majuscule et ne contenir que des lettres et des chiffres.";
          }
          return true;
        },
      },
      {
        type: "input",
        name: "packageName",
        message: "Dans quel package voulez-vous cr√©er cette entit√©?",
        default: this.options["package-name"] || "com.example.domain",
        validate: (input: string) => {
          if (/^[a-z][a-z0-9_]*(\.[a-z][a-z0-9_]*)*$/.test(input)) {
            return true;
          }
          return "Le nom du package doit √™tre un nom de package Java valide.";
        },
      },
      {
        type: "confirm",
        name: "generateRepository",
        message: "Voulez-vous g√©n√©rer un repository pour cette entit√©?",
        default: true,
      },
      {
        type: "confirm",
        name: "generateService",
        message: "Voulez-vous g√©n√©rer un service pour cette entit√©?",
        default: true,
      },
      {
        type: "confirm",
        name: "generateController",
        message: "Voulez-vous g√©n√©rer un controller REST pour cette entit√©?",
        default: true,
      },
    ];

    this.answers = await this.prompt(prompts);
  }

  configuring() {
    this.log("Configuration de l'entit√©...");
    // Logique de configuration ici
  }

  writing() {
    this.log("G√©n√©ration des fichiers pour l'entit√©...");

    // Code de g√©n√©ration des fichiers √† impl√©menter
    this.log(chalk.yellow("Cette fonctionnalit√© sera impl√©ment√©e dans une prochaine t√¢che."));
  }

  end() {
    this.log(chalk.green(`üöÄ Entit√© ${this.answers.entityName} g√©n√©r√©e avec succ√®s!`));
  }
}
