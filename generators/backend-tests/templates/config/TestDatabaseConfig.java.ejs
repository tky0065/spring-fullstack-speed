package <%= packageName %>.config;

import org.springframework.boot.test.context.TestConfiguration;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Primary;
import org.springframework.context.annotation.Profile;
import org.springframework.boot.test.context.TestConfiguration;
import javax.sql.DataSource;
<% if (databaseType === 'postgresql') { %>
import org.springframework.jdbc.datasource.DriverManagerDataSource;
<% } else if (databaseType === 'mysql') { %>
import org.springframework.jdbc.datasource.DriverManagerDataSource;
<% } else if (databaseType === 'mongodb') { %>
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
<% } %>

/**
 * Test configuration for database testing with TestContainers
 */
@TestConfiguration
@Profile("test")
public class TestDatabaseConfig {

<% if (databaseType === 'postgresql' || databaseType === 'mysql') { %>
    /**
     * Create a test DataSource that connects to the TestContainer database
     */
    @Bean
    @Primary
    public DataSource dataSource() {
        // The actual properties will be set dynamically by AbstractContainerBaseTest
        DriverManagerDataSource dataSource = new DriverManagerDataSource();
        <% if (databaseType === 'postgresql') { %>
        dataSource.setDriverClassName("org.postgresql.Driver");
        <% } else if (databaseType === 'mysql') { %>
        dataSource.setDriverClassName("com.mysql.cj.jdbc.Driver");
        <% } %>
        // We don't need to set URL, username, or password here
        // as they are set dynamically via DynamicPropertySource in AbstractContainerBaseTest

        return dataSource;
    }
<% } else if (databaseType === 'mongodb') { %>
    /**
     * Create a test MongoClient that connects to the TestContainer MongoDB
     */
    @Bean
    @Primary
    public MongoClient mongoClient() {
        // The connection string will be set dynamically by AbstractContainerBaseTest
        // We don't need to specify the URI here as it's set via DynamicPropertySource
        return MongoClients.create();
    }
<% } %>
}
