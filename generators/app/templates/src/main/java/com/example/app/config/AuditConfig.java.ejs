package com.example.app.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.domain.AuditorAware;
import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.Optional;

/**
 * Configuration pour l'audit des entités JPA
 * Active le support d'audit automatique et définit l'auditeur actuel
 */
@Configuration
@EnableJpaAuditing(auditorAwareRef = "auditorProvider")
public class AuditConfig {

    private static final String SYSTEM_USER = "system";

    /**
     * Bean qui fournit l'identité de l'utilisateur actuel pour l'audit
     * Utilise l'utilisateur connecté ou "system" si aucun utilisateur n'est authentifié
     */
    @Bean
    public AuditorAware<String> auditorProvider() {
        return () -> {
            Authentication authentication = SecurityContextHolder.getContext().getAuthentication();

            if (authentication == null || !authentication.isAuthenticated()) {
                return Optional.of(SYSTEM_USER);
            }

            if (authentication.getPrincipal() instanceof UserDetails) {
                return Optional.of(((UserDetails) authentication.getPrincipal()).getUsername());
            }

            return Optional.of(authentication.getName());
        };
    }
}
