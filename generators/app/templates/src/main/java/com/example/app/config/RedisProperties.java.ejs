package com.example.app.config;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

/**
 * Propriétés de configuration pour Redis
 */
@Configuration
@ConfigurationProperties(prefix = "spring.redis")
public class RedisProperties {

    private boolean enabled = false;
    private String host = "localhost";
    private int port = 6379;
    private String username;
    private String password;
    private int defaultTtlSeconds = 3600; // 1 heure
    private int usersCacheTtlSeconds = 1800; // 30 minutes
    private int productsCacheTtlSeconds = 7200; // 2 heures
    private int connectionTimeout = 2000; // 2 secondes
    private int maxConnections = 10;

    public boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public String getHost() {
        return host;
    }

    public void setHost(String host) {
        this.host = host;
    }

    public int getPort() {
        return port;
    }

    public void setPort(int port) {
        this.port = port;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public int getDefaultTtlSeconds() {
        return defaultTtlSeconds;
    }

    public void setDefaultTtlSeconds(int defaultTtlSeconds) {
        this.defaultTtlSeconds = defaultTtlSeconds;
    }

    public int getUsersCacheTtlSeconds() {
        return usersCacheTtlSeconds;
    }

    public void setUsersCacheTtlSeconds(int usersCacheTtlSeconds) {
        this.usersCacheTtlSeconds = usersCacheTtlSeconds;
    }

    public int getProductsCacheTtlSeconds() {
        return productsCacheTtlSeconds;
    }

    public void setProductsCacheTtlSeconds(int productsCacheTtlSeconds) {
        this.productsCacheTtlSeconds = productsCacheTtlSeconds;
    }

    public int getConnectionTimeout() {
        return connectionTimeout;
    }

    public void setConnectionTimeout(int connectionTimeout) {
        this.connectionTimeout = connectionTimeout;
    }

    public int getMaxConnections() {
        return maxConnections;
    }

    public void setMaxConnections(int maxConnections) {
        this.maxConnections = maxConnections;
    }
}
