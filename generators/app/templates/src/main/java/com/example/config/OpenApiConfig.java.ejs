package <%= packageName %>.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.servers.Server;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

/**
 * Configuration pour la documentation OpenAPI.
 * Cette classe configure SpringDoc pour générer automatiquement la documentation
 * de l'API qui pourra être utilisée par OpenAPI Generator.
 */
@Configuration
public class OpenApiConfig {

    @Value("${spring.application.name}")
    private String applicationName;

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .info(new Info()
                        .title(applicationName + " API")
                        .description("Documentation de l'API REST pour " + applicationName)
                        .version("1.0.0")
                        .contact(new Contact()
                                .name("Équipe de développement")
                                .url("<%= projectUrl || 'https://example.com' %>")
                                .email("<%= contactEmail || 'contact@example.com' %>"))
                        .license(new License()
                                .name("MIT")
                                .url("https://opensource.org/licenses/MIT")))
                .servers(List.of(
                        new Server()
                                .url("/")
                                .description("Serveur par défaut"),
                        new Server()
                                .url("http://localhost:8080")
                                .description("Serveur de développement")
                ));
    }
}
