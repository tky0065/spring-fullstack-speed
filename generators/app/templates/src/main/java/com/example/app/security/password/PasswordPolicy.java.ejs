package com.example.app.security.password;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

/**
 * Configuration des politiques de mot de passe
 * Ces paramètres peuvent être modifiés dans application.yml/properties
 */
@Configuration
@ConfigurationProperties(prefix = "security.password-policy")
public class PasswordPolicy {

    // Longueur du mot de passe
    private int minLength = 8;
    private int maxLength = 128;

    // Exigences de caractères
    private boolean requireUppercase = true;
    private int minUppercase = 1;

    private boolean requireLowercase = true;
    private int minLowercase = 1;

    private boolean requireDigit = true;
    private int minDigit = 1;

    private boolean requireSpecial = true;
    private int minSpecial = 1;

    // Règles avancées
    private boolean disallowWhitespace = true;
    private boolean preventSequences = true;
    private boolean preventCommonPasswords = true;

    // Historique des mots de passe
    private boolean checkPasswordHistory = true;
    private int passwordHistorySize = 5;

    // Expiration
    private boolean passwordExpiration = false;
    private int passwordExpirationDays = 90;

    // Tentatives de connexion
    private int maxLoginAttempts = 5;
    private int lockoutDurationMinutes = 15;

    // Getters et Setters

    public int getMinLength() {
        return minLength;
    }

    public void setMinLength(int minLength) {
        this.minLength = minLength;
    }

    public int getMaxLength() {
        return maxLength;
    }

    public void setMaxLength(int maxLength) {
        this.maxLength = maxLength;
    }

    public boolean isRequireUppercase() {
        return requireUppercase;
    }

    public void setRequireUppercase(boolean requireUppercase) {
        this.requireUppercase = requireUppercase;
    }

    public int getMinUppercase() {
        return minUppercase;
    }

    public void setMinUppercase(int minUppercase) {
        this.minUppercase = minUppercase;
    }

    public boolean isRequireLowercase() {
        return requireLowercase;
    }

    public void setRequireLowercase(boolean requireLowercase) {
        this.requireLowercase = requireLowercase;
    }

    public int getMinLowercase() {
        return minLowercase;
    }

    public void setMinLowercase(int minLowercase) {
        this.minLowercase = minLowercase;
    }

    public boolean isRequireDigit() {
        return requireDigit;
    }

    public void setRequireDigit(boolean requireDigit) {
        this.requireDigit = requireDigit;
    }

    public int getMinDigit() {
        return minDigit;
    }

    public void setMinDigit(int minDigit) {
        this.minDigit = minDigit;
    }

    public boolean isRequireSpecial() {
        return requireSpecial;
    }

    public void setRequireSpecial(boolean requireSpecial) {
        this.requireSpecial = requireSpecial;
    }

    public int getMinSpecial() {
        return minSpecial;
    }

    public void setMinSpecial(int minSpecial) {
        this.minSpecial = minSpecial;
    }

    public boolean isDisallowWhitespace() {
        return disallowWhitespace;
    }

    public void setDisallowWhitespace(boolean disallowWhitespace) {
        this.disallowWhitespace = disallowWhitespace;
    }

    public boolean isPreventSequences() {
        return preventSequences;
    }

    public void setPreventSequences(boolean preventSequences) {
        this.preventSequences = preventSequences;
    }

    public boolean isPreventCommonPasswords() {
        return preventCommonPasswords;
    }

    public void setPreventCommonPasswords(boolean preventCommonPasswords) {
        this.preventCommonPasswords = preventCommonPasswords;
    }

    public boolean isCheckPasswordHistory() {
        return checkPasswordHistory;
    }

    public void setCheckPasswordHistory(boolean checkPasswordHistory) {
        this.checkPasswordHistory = checkPasswordHistory;
    }

    public int getPasswordHistorySize() {
        return passwordHistorySize;
    }

    public void setPasswordHistorySize(int passwordHistorySize) {
        this.passwordHistorySize = passwordHistorySize;
    }

    public boolean isPasswordExpiration() {
        return passwordExpiration;
    }

    public void setPasswordExpiration(boolean passwordExpiration) {
        this.passwordExpiration = passwordExpiration;
    }

    public int getPasswordExpirationDays() {
        return passwordExpirationDays;
    }

    public void setPasswordExpirationDays(int passwordExpirationDays) {
        this.passwordExpirationDays = passwordExpirationDays;
    }

    public int getMaxLoginAttempts() {
        return maxLoginAttempts;
    }

    public void setMaxLoginAttempts(int maxLoginAttempts) {
        this.maxLoginAttempts = maxLoginAttempts;
    }

    public int getLockoutDurationMinutes() {
        return lockoutDurationMinutes;
    }

    public void setLockoutDurationMinutes(int lockoutDurationMinutes) {
        this.lockoutDurationMinutes = lockoutDurationMinutes;
    }
}
