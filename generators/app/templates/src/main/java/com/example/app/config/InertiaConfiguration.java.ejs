package <%= packageName %>.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.ViewResolver;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

import io.github.inertia4j.spring.InertiaViewResolver;

/**
 * Configuration pour l'intégration d'Inertia.js avec Spring Boot.
 */
@Configuration
public class InertiaConfiguration implements WebMvcConfigurer {

    /**
     * Configure le ViewResolver d'Inertia.js.
     *
     * @return ViewResolver configuré pour Inertia
     */
    @Bean
    public ViewResolver inertiaViewResolver() {
        InertiaViewResolver resolver = new InertiaViewResolver();
        resolver.setRootView("app"); // Le nom du template racine (sans extension)
        return resolver;
    }

    /**
     * Configure les gestionnaires de ressources statiques.
     */
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        // Configuration pour servir les assets statiques du frontend
        registry.addResourceHandler("/assets/**")
                .addResourceLocations("classpath:/static/assets/");

        // Configuration supplémentaire pour d'autres ressources statiques
        registry.addResourceHandler("/favicon.ico")
                .addResourceLocations("classpath:/static/favicon.ico");
    }
}
