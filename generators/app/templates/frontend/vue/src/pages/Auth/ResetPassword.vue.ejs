<template>
  <MainLayout title="Réinitialisation de mot de passe">
    <div v-if="resetComplete" class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <Card class="w-full max-w-md">
        <div class="text-center">
          <h2 class="text-2xl font-extrabold text-gray-900 mb-6">
            Mot de passe réinitialisé avec succès
          </h2>
        </div>

        <Alert
          type="success"
          message="Votre mot de passe a été réinitialisé avec succès. Vous pouvez maintenant vous connecter avec votre nouveau mot de passe."
          class="mb-6"
        />

        <div class="mt-6">
          <Button
            primary
            href="/login"
            class="w-full"
          >
            Se connecter
          </Button>
        </div>
      </Card>
    </div>

    <div v-else class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <Card class="w-full max-w-md">
        <div class="text-center">
          <h2 class="text-2xl font-extrabold text-gray-900 mb-6">
            Réinitialiser votre mot de passe
          </h2>
        </div>

        <Alert v-if="errorMessage" type="error" :message="errorMessage" class="mb-4" />

        <form class="space-y-6" @submit.prevent="handleSubmit">
          <InputField
            id="email"
            name="email"
            type="email"
            label="Adresse email"
            v-model="form.email"
            :error="errors.email"
            disabled
            required
          />

          <div class="relative">
            <InputField
              id="password"
              name="password"
              :type="showPassword ? 'text' : 'password'"
              label="Nouveau mot de passe"
              v-model="form.password"
              :error="errors.password"
              required
              autocomplete="new-password"
            />
            <button
              type="button"
              class="absolute top-8 right-2 text-gray-500"
              @click="showPassword = !showPassword"
            >
              {{ showPassword ? 'Masquer' : 'Afficher' }}
            </button>
          </div>

          <InputField
            id="confirmPassword"
            name="confirmPassword"
            :type="showPassword ? 'text' : 'password'"
            label="Confirmer le nouveau mot de passe"
            v-model="form.confirmPassword"
            :error="errors.confirmPassword"
            required
            autocomplete="new-password"
          />

          <div>
            <Button
              primary
              type="submit"
              class="w-full"
              :disabled="processing"
            >
              {{ processing ? "Réinitialisation en cours..." : "Réinitialiser le mot de passe" }}
            </Button>
          </div>
        </form>
      </Card>
    </div>
  </MainLayout>
</template>

<script setup lang="ts">
import { ref, reactive } from 'vue';
import { router } from '@inertiajs/vue3';
import MainLayout from '../../layouts/MainLayout.vue';
import Button from '../../components/ui/Button.vue';
import InputField from '../../components/ui/InputField.vue';
import Card from '../../components/ui/Card.vue';
import Alert from '../../components/ui/Alert.vue';

/**
 * Interface des props pour la page de réinitialisation de mot de passe
 */
interface ResetPasswordProps {
  token: string;
  email: string;
}

// Définition des props
const props = defineProps<ResetPasswordProps>();

/**
 * Interface pour le formulaire de réinitialisation de mot de passe
 */
interface ResetPasswordForm {
  token: string;
  email: string;
  password: string;
  confirmPassword: string;
}

// État du formulaire
const form = reactive<ResetPasswordForm>({
  token: props.token,
  email: props.email,
  password: '',
  confirmPassword: ''
});

// États pour la gestion de l'UI
const showPassword = ref(false);
const processing = ref(false);
const resetComplete = ref(false);
const errors = reactive<Record<string, string>>({});
const errorMessage = ref<string | null>(null);

/**
 * Gestionnaire de soumission du formulaire
 */
const handleSubmit = () => {
  processing.value = true;

  // Validation côté client
  if (form.password !== form.confirmPassword) {
    errors.confirmPassword = "Les mots de passe ne correspondent pas";
    processing.value = false;
    return;
  }

  // Réinitialiser les erreurs
  Object.keys(errors).forEach(key => delete errors[key]);
  errorMessage.value = null;

  // Envoyer la requête avec Inertia.js
  router.post('/reset-password', form, {
    onSuccess: () => {
      resetComplete.value = true;
      processing.value = false;
    },
    onError: (err) => {
      // Copier les erreurs
      Object.assign(errors, err);

      // Afficher un message d'erreur général s'il y en a un
      if (err.message) {
        errorMessage.value = err.message;
      } else if (err.token) {
        errorMessage.value = "Ce lien de réinitialisation est invalide ou a expiré.";
      }

      processing.value = false;
    }
  });
};
</script>

