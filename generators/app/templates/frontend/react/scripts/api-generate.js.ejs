#!/usr/bin/env node
/**
 * Script shell pour g√©n√©rer facilement les API clients
 * Permet d'ex√©cuter la commande de g√©n√©ration sans avoir √† se souvenir des param√®tres
 */

const { execSync } = require('child_process');
const chalk = require('chalk');

console.log(chalk.blue('üöÄ G√©n√©ration des clients API depuis la documentation OpenAPI...'));
console.log('');

try {
  // V√©rifier si le serveur est accessible
  console.log(chalk.yellow('V√©rification de la disponibilit√© du serveur...'));
  try {
    execSync('curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/v3/api-docs');
    console.log(chalk.green('‚úÖ Serveur accessible, documentation OpenAPI disponible'));
  } catch (error) {
    console.log(chalk.red('‚ùå Serveur non accessible ou documentation OpenAPI non disponible'));
    console.log(chalk.yellow('‚ö†Ô∏è Assurez-vous que votre serveur Spring Boot est d√©marr√© et que SpringDoc est configur√©'));
    process.exit(1);
  }

  // Ex√©cuter la commande de g√©n√©ration API
  console.log(chalk.yellow('G√©n√©ration des clients TypeScript...'));
  execSync('npm run generate-api', { stdio: 'inherit' });

  console.log('');
  console.log(chalk.green('‚úÖ G√©n√©ration des clients API termin√©e avec succ√®s!'));
  console.log(chalk.yellow('Les clients API ont √©t√© g√©n√©r√©s dans le dossier src/api'));

} catch (error) {
  console.error(chalk.red('‚ùå Erreur lors de la g√©n√©ration des clients API:'));
  console.error(error.message);
  process.exit(1);
}
