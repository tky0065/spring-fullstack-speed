/**
 * Service pour l'utilisation des API générées avec OpenAPI Generator
 * Ce service fournit un client Axios configuré pour les appels vers l'API
 */

import axios, { AxiosRequestConfig } from 'axios';
import { Configuration } from '../api';

// Configuration de base d'Axios
const API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:8080';

// Instance Axios configurée
export const apiClient = axios.create({
  baseURL: API_BASE_URL,
  headers: {
    'Content-Type': 'application/json',
  },
});

// Configuration pour les client API générés par OpenAPI
export const apiConfig = new Configuration({
  basePath: API_BASE_URL,
});

// Intercepteur pour ajouter le token JWT aux requêtes
apiClient.interceptors.request.use((config: AxiosRequestConfig) => {
  const token = localStorage.getItem('auth_token');
  if (token) {
    config.headers = {
      ...config.headers,
      Authorization: `Bearer ${token}`,
    };
  }
  return config;
});

// Intercepteur pour gérer les erreurs d'authentification (401, 403)
apiClient.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response && (error.response.status === 401 || error.response.status === 403)) {
      // Gestion des erreurs d'authentification
      localStorage.removeItem('auth_token');
      window.location.href = '/login';
    }
    return Promise.reject(error);
  }
);

export default apiClient;
