import React, { useState } from 'react';
import { useForm } from '@inertiajs/react';
import MainLayout from '../../layouts/MainLayout';
import Button from '../../components/ui/Button';
import InputField from '../../components/ui/InputField';
import Card from '../../components/ui/Card';
import Alert from '../../components/ui/Alert';

interface ResetPasswordForm {
  token: string;
  email: string;
  password: string;
  confirmPassword: string;
}

interface ResetPasswordProps {
  token: string;
  email: string;
}

/**
 * Page de réinitialisation de mot de passe
 */
export default function ResetPassword({ token, email }: ResetPasswordProps) {
  const [showPassword, setShowPassword] = useState<boolean>(false);
  const [resetComplete, setResetComplete] = useState<boolean>(false);

  const { data, setData, post, processing, errors } = useForm<ResetPasswordForm>({
    token,
    email,
    password: '',
    confirmPassword: '',
  });

  /**
   * Gestionnaire de soumission du formulaire
   */
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    post('/reset-password', {
      onSuccess: () => {
        setResetComplete(true);
      }
    });
  };

  if (resetComplete) {
    return (
      <MainLayout title="Mot de passe réinitialisé">
        <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
          <Card className="w-full max-w-md">
            <div className="text-center">
              <h2 className="text-2xl font-extrabold text-gray-900 mb-6">
                Mot de passe réinitialisé avec succès
              </h2>
            </div>

            <Alert
              type="success"
              message="Votre mot de passe a été réinitialisé avec succès. Vous pouvez maintenant vous connecter avec votre nouveau mot de passe."
              className="mb-6"
            />

            <div className="mt-6">
              <Button
                primary
                href="/login"
                className="w-full"
              >
                Se connecter
              </Button>
            </div>
          </Card>
        </div>
      </MainLayout>
    );
  }

  return (
    <MainLayout title="Réinitialisation de mot de passe">
      <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
        <Card className="w-full max-w-md">
          <div className="text-center">
            <h2 className="text-2xl font-extrabold text-gray-900 mb-6">
              Réinitialiser votre mot de passe
            </h2>
          </div>

          {errors.email && <Alert type="error" message={errors.email} className="mb-4" />}
          {errors.password && <Alert type="error" message={errors.password} className="mb-4" />}
          {errors.confirmPassword && <Alert type="error" message={errors.confirmPassword} className="mb-4" />}
          {errors.token && <Alert type="error" message="Ce lien de réinitialisation est invalide ou a expiré." className="mb-4" />}

          <form className="space-y-6" onSubmit={handleSubmit}>
            <InputField
              label="Adresse email"
              id="email"
              name="email"
              type="email"
              value={data.email}
              onChange={(e) => setData('email', e.target.value)}
              autoComplete="email"
              disabled
              required
            />

            <div className="relative">
              <InputField
                label="Nouveau mot de passe"
                id="password"
                name="password"
                type={showPassword ? 'text' : 'password'}
                value={data.password}
                onChange={(e) => setData('password', e.target.value)}
                autoComplete="new-password"
                required
                error={errors.password}
              />
              <button
                type="button"
                className="absolute top-8 right-2 text-gray-500"
                onClick={() => setShowPassword(!showPassword)}
              >
                {showPassword ? 'Masquer' : 'Afficher'}
              </button>
            </div>

            <InputField
              label="Confirmer le nouveau mot de passe"
              id="confirmPassword"
              name="confirmPassword"
              type={showPassword ? 'text' : 'password'}
              value={data.confirmPassword}
              onChange={(e) => setData('confirmPassword', e.target.value)}
              autoComplete="new-password"
              required
              error={errors.confirmPassword}
            />

            <div>
              <Button
                primary
                type="submit"
                className="w-full"
                disabled={processing}
              >
                {processing ? "Réinitialisation en cours..." : "Réinitialiser le mot de passe"}
              </Button>
            </div>
          </form>
        </Card>
      </div>
    </MainLayout>
  );
}
