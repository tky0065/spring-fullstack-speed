# Application générée par Spring-Fullstack-Speed
spring.application.name=<%= appName %>

# Configuration du serveur
server.port=8080
<% if (additionalFeatures.includes('openapi')) { %>
server.servlet.context-path=/api
<% } %>

# Profil actif
spring.profiles.active=dev

# Configuration JPA
<% if (database === 'MySQL') { %>
spring.datasource.url=jdbc:mysql://localhost:3306/<%= appName.toLowerCase() %>?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
<% } else if (database === 'PostgreSQL') { %>
spring.datasource.url=jdbc:postgresql://localhost:5432/<%= appName.toLowerCase() %>
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
<% } else if (database === 'H2') { %>
spring.datasource.url=jdbc:h2:mem:<%= appName.toLowerCase() %>
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
<% } else if (database === 'MongoDB') { %>
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=<%= appName.toLowerCase() %>
<% } %>

<% if (database !== 'MongoDB') { %>
# Hibernate configuration
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
<% } %>

<% if (additionalFeatures.includes('redis')) { %>
# Configuration Redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=2000
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
<% } %>

<% if (includeAuth) { %>
# JWT Configuration
app.jwt.secret=<%= generateRandomSecret(64) %>
app.jwt.expiration-ms=86400000
app.jwt.header=Authorization
app.jwt.token-prefix=Bearer
<% } %>

<% if (additionalFeatures.includes('prometheus')) { %>
# Prometheus/Actuator Configuration
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
<% } %>

# Logging Configuration
logging.level.root=INFO
logging.level.<%= packageName %>=DEBUG
<% if (database !== 'MongoDB') { %>
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
<% } %>

<% if (frontendFramework !== 'Aucun (API seulement)') { %>
# Frontend Configuration
spring.web.resources.static-locations=classpath:/static/
<% if (frontendFramework === 'Thymeleaf') { %>
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
<% } else if (frontendFramework === 'JTE') { %>
gg.jte.developmentMode=true
gg.jte.templateLocation=src/main/resources/templates
<% } %>
<% } %>

<% if (additionalFeatures.includes('openapi')) { %>
# OpenAPI/Swagger Configuration
springdoc.api-docs.path=/docs
springdoc.swagger-ui.path=/swagger-ui
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
<% } %>

<% if (additionalFeatures.includes('elasticsearch')) { %>
# Elasticsearch Configuration
spring.elasticsearch.uris=http://localhost:9200
<% } %>

<% if (additionalFeatures.includes('kafka')) { %>
# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=<%= appName.toLowerCase() %>-consumer
spring.kafka.consumer.auto-offset-reset=earliest
<% } %>

<% if (additionalFeatures.includes('rabbitmq')) { %>
# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
<% } %>

# Autres configurations
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.mvc.throw-exception-if-no-handler-found=true
spring.messages.basename=i18n/messages
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=5
spring.task.execution.pool.queue-capacity=10
