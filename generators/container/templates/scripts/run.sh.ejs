#!/bin/bash
# Script de lancement du container Docker pour <%= applicationName %>

set -e

# Couleurs pour les messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Variables
IMAGE_NAME="<%= applicationName %>"
CONTAINER_NAME="<%= applicationName %>"
NETWORK_NAME="app-network"
PORT="<%= containerPort %>"
EXTERNAL_PORT="${APP_PORT:-$PORT}"

echo -e "${YELLOW}Lancement du container $CONTAINER_NAME...${NC}"

# Vérifier si le container existe déjà
if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
    echo -e "${RED}Le container $CONTAINER_NAME est déjà en cours d'exécution${NC}"
    echo -e "${YELLOW}Pour l'arrêter: docker stop $CONTAINER_NAME${NC}"
    echo -e "${YELLOW}Pour voir les logs: docker logs -f $CONTAINER_NAME${NC}"
    exit 0
fi

# Vérifier si le container est arrêté
if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
    echo -e "${YELLOW}Suppression du container arrêté $CONTAINER_NAME...${NC}"
    docker rm $CONTAINER_NAME
fi

# Créer le réseau s'il n'existe pas déjà
if ! docker network ls | grep -q $NETWORK_NAME; then
    echo -e "${YELLOW}Création du réseau $NETWORK_NAME...${NC}"
    docker network create $NETWORK_NAME
fi

# Lancer le container
echo -e "${YELLOW}Lancement du container $CONTAINER_NAME sur le port $EXTERNAL_PORT...${NC}"
docker run -d \
    --name $CONTAINER_NAME \
    --network $NETWORK_NAME \
    -p $EXTERNAL_PORT:$PORT \
    -e "SPRING_PROFILES_ACTIVE=docker" \
    $IMAGE_NAME:latest

echo -e "${GREEN}Container $CONTAINER_NAME lancé avec succès!${NC}"
echo -e "${YELLOW}Pour voir les logs: docker logs -f $CONTAINER_NAME${NC}"
echo -e "${YELLOW}Pour arrêter le container: docker stop $CONTAINER_NAME${NC}"
