package <%= packageName %>.notification.service;

import org.springframework.stereotype.Service;
<% if (asyncNotifications) { %>
import org.springframework.scheduling.annotation.Async;
<% } %>

/**
 * Interface de service pour l'envoi d'emails
 */
public interface EmailService {

    /**
     * Envoie un email simple
     *
     * @param to Destinataire
     * @param subject Sujet de l'email
     * @param text Contenu de l'email
     * @param isHtml Indique si le contenu est au format HTML
     */
    <% if (asyncNotifications) { %>@Async<% } %>
    void sendEmail(String to, String subject, String text, boolean isHtml);

    /**
     * Envoie un email avec pièces jointes
     *
     * @param to Destinataire
     * @param subject Sujet de l'email
     * @param text Contenu de l'email
     * @param isHtml Indique si le contenu est au format HTML
     * @param attachments Tableau des chemins des pièces jointes
     */
    <% if (asyncNotifications) { %>@Async<% } %>
    void sendEmailWithAttachments(String to, String subject, String text, boolean isHtml, String[] attachments);

    <% if (useTemplating) { %>
    /**
     * Envoie un email basé sur un template
     *
     * @param to Destinataire
     * @param subject Sujet de l'email
     * @param templateName Nom du template à utiliser
     * @param model Modèle de données à injecter dans le template
     */
    <% if (asyncNotifications) { %>@Async<% } %>
    void sendTemplateEmail(String to, String subject, String templateName, Object model);
    <% } %>
}
