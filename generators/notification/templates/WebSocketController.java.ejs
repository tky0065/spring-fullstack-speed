package <%= packageName %>.notification.controller;

import <%= packageName %>.notification.dto.WebSocketMessageDTO;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.messaging.handler.annotation.SendTo;
import org.springframework.messaging.simp.SimpMessageHeaderAccessor;
import org.springframework.stereotype.Controller;

/**
 * Contrôleur WebSocket pour gérer les messages en temps réel
 */
@Controller
public class WebSocketController {

    /**
     * Gère les messages entrants et les diffuse à tous les abonnés
     *
     * @param message Le message reçu
     * @return Le message à diffuser
     */
    @MessageMapping("/send")
    @SendTo("/topic/public")
    public WebSocketMessageDTO sendMessage(@Payload WebSocketMessageDTO message) {
        return message;
    }

    /**
     * Gère les événements de connexion utilisateur
     *
     * @param message Le message reçu
     * @param headerAccessor Accesseur pour les en-têtes du message
     * @return Le message de notification de connexion
     */
    @MessageMapping("/connect")
    @SendTo("/topic/public")
    public WebSocketMessageDTO connect(
            @Payload WebSocketMessageDTO message,
            SimpMessageHeaderAccessor headerAccessor) {
        // Ajouter le nom d'utilisateur dans la session WebSocket
        if (headerAccessor.getSessionAttributes() != null && message.getContent() != null) {
            headerAccessor.getSessionAttributes().put("username", message.getContent());
        }
        return message;
    }
}
