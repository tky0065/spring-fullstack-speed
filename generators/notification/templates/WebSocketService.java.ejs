package <%= packageName %>.notification.service;

import <%= packageName %>.notification.dto.WebSocketMessageDTO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Service pour l'envoi de messages via WebSocket
 */
@Service
public class WebSocketService {

    private final Logger log = LoggerFactory.getLogger(WebSocketService.class);

    @Autowired
    private SimpMessagingTemplate messagingTemplate;

    /**
     * Envoie un message à un topic spécifique
     *
     * @param destination Le topic de destination
     * @param message Le message à envoyer
     */
    public void sendToTopic(String destination, WebSocketMessageDTO message) {
        try {
            messagingTemplate.convertAndSend("/topic/" + destination, message);
            log.debug("Message envoyé au topic: {}", destination);
        } catch (Exception e) {
            log.error("Erreur lors de l'envoi du message au topic {}: {}", destination, e.getMessage(), e);
        }
    }

    /**
     * Envoie un message à un utilisateur spécifique
     *
     * @param userId L'identifiant de l'utilisateur
     * @param message Le message à envoyer
     */
    public void sendToUser(String userId, WebSocketMessageDTO message) {
        try {
            messagingTemplate.convertAndSendToUser(userId, "/queue/notifications", message);
            log.debug("Message envoyé à l'utilisateur: {}", userId);
        } catch (Exception e) {
            log.error("Erreur lors de l'envoi du message à l'utilisateur {}: {}", userId, e.getMessage(), e);
        }
    }

    /**
     * Envoie une notification à tous les utilisateurs connectés
     *
     * @param message Le message à envoyer
     */
    public void sendGlobalNotification(WebSocketMessageDTO message) {
        try {
            messagingTemplate.convertAndSend("/topic/global", message);
            log.debug("Notification globale envoyée");
        } catch (Exception e) {
            log.error("Erreur lors de l'envoi de la notification globale: {}", e.getMessage(), e);
        }
    }
}
