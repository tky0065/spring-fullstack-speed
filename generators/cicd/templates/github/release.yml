name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: true
        default: 'false'
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Update version in pom.xml
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.version }} -DgenerateBackupPoms=false
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add pom.xml
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
          git push

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Create Release Tag
        id: tag
        run: |
          git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}"
          git push origin v${{ github.event.inputs.version }}
          echo "tag=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=$(git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s (%h)" --no-merges)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          body: |
            ## Changes in this Release
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            
            ```xml
            <dependency>
              <groupId>${{ github.repository_owner }}</groupId>
              <artifactId>${{ github.event.repository.name }}</artifactId>
              <version>${{ github.event.inputs.version }}</version>
            </dependency>
            ```
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
<% if (dockerRegistry) { %>
          registry: <%= dockerRegistry %>
<% } %>
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image with version tag
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
<% if (dockerRegistry) { %>
            <%= dockerRegistry %>/${{ github.repository }}:v${{ github.event.inputs.version }}
            <%= dockerRegistry %>/${{ github.repository }}:latest
<% } else { %>
            ${{ github.repository }}:v${{ github.event.inputs.version }}
            ${{ github.repository }}:latest
<% } %>
          cache-from: type=gha
          cache-to: type=gha,mode=max
