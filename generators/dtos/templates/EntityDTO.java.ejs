package <%= packageName %>;

<% if (imports && imports.length > 0) { -%>
<% imports.forEach(function(importStatement) { -%>
import <%= importStatement %>;
<% }); -%>
<% } -%>
<% if (hasDateFields) { -%>
import java.time.*;
<% } -%>
<% if (hasBigDecimalFields) { -%>
import java.math.BigDecimal;
<% } -%>
import java.io.Serializable;
import jakarta.validation.constraints.*;
<% if (useMapstruct) { -%>
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;
<% } -%>
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import lombok.Builder;

/**
 * DTO for {@link <%= entityPackageName %>.<%= entityName %>}
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class <%= entityName %>DTO implements Serializable {
    private Long id;
<% fields.forEach(function(field) { -%>

    <% if (field.required) { -%>
    @NotNull
    <% } -%>
    <% if (field.type === "String" && field.minLength) { -%>
    @Size(min = <%= field.minLength %><% if (field.maxLength) { %>, max = <%= field.maxLength %><% } %>)
    <% } else if (field.type === "String" && field.maxLength) { -%>
    @Size(max = <%= field.maxLength %>)
    <% } -%>
    <% if (["Integer", "Long", "Float", "Double", "BigDecimal"].includes(field.type) && field.min !== null) { -%>
    @Min(value = <%= field.min %>)
    <% } -%>
    <% if (["Integer", "Long", "Float", "Double", "BigDecimal"].includes(field.type) && field.max !== null) { -%>
    @Max(value = <%= field.max %>)
    <% } -%>
    private <%= field.type %> <%= field.name %>;
<% }); -%>

<% if (useMapstruct) { -%>
    /**
     * Mapper pour convertir entre l'entit√© et le DTO
     */
    @Mapper
    public interface <%= entityName %>Mapper {
        <%= entityName %>Mapper INSTANCE = Mappers.getMapper(<%= entityName %>Mapper.class);

        @Mapping(target = "id", source = "id")
        <%= entityName %>DTO toDto(<%= entityPackageName %>.<%= entityName %> entity);

        @Mapping(target = "id", source = "id")
        <%= entityPackageName %>.<%= entityName %> toEntity(<%= entityName %>DTO dto);
    }
<% } -%>
}
